Object subclass: #Agenda	instanceVariableNames: 'contactos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Agenda methodsFor: 'all' stamp: 'neta 4/24/2017 12:19'!initialize	contactos := Dictionary new.	! !!Agenda methodsFor: 'all' stamp: 'neta 4/24/2017 12:19'!existeContacto: nombre	"Verifica si un contacto esta incluido en la agenda"	^ contactos includesKey: nombre.	! !!Agenda methodsFor: 'all' stamp: 'neta 4/24/2017 12:18'!agregarContacto: contacto	"Agrega un contacto a la agenda"	contactos add: (contacto obtenerNombre) -> contacto .	! !!Agenda methodsFor: 'all' stamp: 'neta 4/22/2017 15:43'!cantidadDeContactos	"Devuelve la cantidad de contactos que tiene agendados"	^ contactos size.! !Object subclass: #AlgoChat	instanceVariableNames: 'miUsuario miAgenda miBuzonEntrada miBuzonSalida grupos conversaciones'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:21'!cantidadMensajesDe: persona		^ miBuzonEntrada cantidadMensajesDe: persona.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:22'!cantidadTotalMensajesRecibidos		^ miBuzonEntrada cantidadTotalMensajes.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:23'!existeGrupo: nombreGrupo	^ grupos includesKey: nombreGrupo.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:20'!cantidadDeChatsGrupales		^ grupos size.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:23'!existeContacto: persona	^ miAgenda existeContacto: persona.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:24'!recibirMensajeDeGrupo: nombreGrupo yUsuario: persona diciendo: mensaje 	|miMensaje|	miMensaje := Mensaje new.	miMensaje establecerEmisor: persona.	miMensaje establecerReceptor: 'Yo'.	miMensaje establecerContenido: mensaje.	miBuzonEntrada archivarMensaje: miMensaje.	((grupos at:nombreGrupo)verBuzonEntrada)archivarMensaje: miMensaje.		((grupos at: nombreGrupo)verChat)agregarMensaje: miMensaje. ! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:21'!cantidadMensajesEnviadosA: persona		^ miBuzonSalida cantidadMensajesEnviadosA: persona.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:23'!nombreUsuario		^ miUsuario.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:19'!asignarNombre: nombre	miUsuario := nombre.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:24'!borrarMensajesDelContacto: persona		|conversacion_con_persona|	conversacion_con_persona := conversaciones detect:[:mi_conversacion | (mi_conversacion conversoCon) 	= persona].	conversaciones remove: conversacion_con_persona.	miBuzonEntrada removerMensajesCon: persona.	miBuzonSalida removerMensajesCon: persona.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:22'!cantidadMensajesEnviadosAlGrupo: nombreGrupo 	^((grupos at: nombreGrupo)verBuzonSalida)cantidadTotalMensajes.  ! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:24'!obtenerConversacionConGrupo: nombreGrupo 	^((grupos at: nombreGrupo)verChat)obtenerConversacion.  ! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:21'!cantidadDeChatsIndividuales		^ conversaciones size.	! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:21'!cantidadDeContactos		^ miAgenda cantidadDeContactos.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:22'!cantidadTotalMensajesEnviados		^ miBuzonSalida cantidadTotalMensajes.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:23'!enviarMensajeA: persona diciendo: mensaje		|miMensaje|	miMensaje := Mensaje new.	miMensaje establecerEmisor: 'Yo'.	miMensaje establecerReceptor: persona.	miMensaje establecerContenido: mensaje.	miBuzonSalida archivarMensaje: miMensaje.	conversaciones do:[:miConversacion | (miConversacion conversoCon = persona)ifTrue:[miConversacion  	agregarMensaje: miMensaje]].! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:23'!obtenerConversacionCon: persona	|conversacionConPersona|	conversaciones do:[:miConversacion | (miConversacion conversoCon = 	persona)ifTrue:[conversacionConPersona := miConversacion obtenerConversacion]].	^ conversacionConPersona.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:22'!cantidadMiembrosEnGrupo: nombreGrupo	^ (grupos at: nombreGrupo)cantidadMiembrosEnGrupo.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:24'!recibirMensajeDe: persona diciendo: mensaje		|miMensaje|	miMensaje := Mensaje new.	miMensaje establecerEmisor: persona.	miMensaje establecerReceptor: 'Yo'.	miMensaje establecerContenido: mensaje.	miBuzonEntrada archivarMensaje: miMensaje.	conversaciones do:[:miConversacion | (miConversacion conversoCon = persona)ifTrue:[miConversacion  	agregarMensaje: miMensaje]].		! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:22'!cantidadMensajesRecibidosDelGrupo: nombreGrupo 	^((grupos at: nombreGrupo)verBuzonEntrada)cantidadTotalMensajes. ! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:21'!cantidadDeMensajesEnviados		^ miBuzonSalida cantidadTotalMensajes.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:24'!agregarContacto: nombre		|contacto conversacion|	contacto := Contacto new.	conversacion := Conversacion new.	contacto establecerNombre: nombre.	conversacion conversarCon: nombre.  	miAgenda agregarContacto: contacto.	conversaciones add: conversacion.	! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:22'!crearGrupo: nombreGrupo		|miGrupo|	miGrupo := Grupo new.	miGrupo asignarNombre: nombreGrupo.	grupos add: nombreGrupo -> miGrupo.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/23/2017 10:14'!initialize	"Aquí se inicializara el AlgoChat"	miAgenda := Agenda new.	miBuzonEntrada := Buzon new.	miBuzonSalida := Buzon new.	grupos := Dictionary new.	conversaciones := OrderedCollection new.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:20'!borrarMensajesDelGrupo: nombreGrupo		|mensajes_grupo buzonEntradaGrupo buzonSalidaGrupo|	mensajes_grupo := (grupos at: nombreGrupo)obtenerTodosMensajes. 	buzonEntradaGrupo := (grupos at: nombreGrupo)verBuzonEntrada.	buzonSalidaGrupo := (grupos at: nombreGrupo) verBuzonSalida.	miBuzonEntrada removerMensajesDe: mensajes_grupo.	miBuzonSalida removerMensajesDe: mensajes_grupo.	buzonEntradaGrupo removerMensajesDe: mensajes_grupo.	buzonSalidaGrupo removerMensajesDe: mensajes_grupo.  ! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:19'!agregarContacto: persona aGrupo: nombreGrupo	(grupos at: nombreGrupo)agregarContacto: persona.! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:23'!enviarMensajeAGrupo: nombreGrupo diciendo: mensaje 	|miMensaje|	miMensaje := Mensaje new.	miMensaje establecerEmisor: 'Yo'.	miMensaje establecerReceptor: nombreGrupo.	miMensaje establecerContenido: mensaje.	miBuzonSalida archivarMensaje: miMensaje.	((grupos at:nombreGrupo)verBuzonSalida)archivarMensaje: miMensaje.		((grupos at: nombreGrupo)verChat)agregarMensaje: miMensaje. 	! !!AlgoChat methodsFor: 'all' stamp: 'neta 4/24/2017 12:21'!cantidadDeGrupos		^ grupos size.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoChat class	instanceVariableNames: ''!!AlgoChat class methodsFor: 'as yet unclassified' stamp: 'neta 4/22/2017 15:29'!crearNuevoParaUsuario: nombre	|algochat|	algochat:= AlgoChat new.	algochat asignarNombre: nombre.	^ algochat.! !Object subclass: #Buzon	instanceVariableNames: 'buzon'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Buzon methodsFor: 'all' stamp: 'neta 4/24/2017 12:25'!removerMensajesCon: persona	"comment stating purpose of message"	|mensajes_a_borrar|	mensajes_a_borrar := OrderedCollection new.	buzon do:[:miMensaje | ((miMensaje verEmisor = persona) | (miMensaje verReceptor = persona))ifTrue: 	[mensajes_a_borrar add: miMensaje]].	mensajes_a_borrar do:[:a_borrar | buzon remove: a_borrar].! !!Buzon methodsFor: 'all' stamp: 'neta 4/23/2017 22:48'!initialize	buzon := OrderedCollection new.	! !!Buzon methodsFor: 'all' stamp: 'neta 4/22/2017 16:34'!cantidadTotalMensajes	"comment stating purpose of message"	^ buzon size.! !!Buzon methodsFor: 'all' stamp: 'neta 4/23/2017 17:51'!obtenerMensajes	"comment stating purpose of message"	^ buzon.! !!Buzon methodsFor: 'all' stamp: 'neta 4/23/2017 23:46'!removerMensajesDe: lista	"comment stating purpose of message"	lista do:[:mi_mensaje | (buzon includes: mi_mensaje)ifTrue: [ buzon remove: mi_mensaje ] ].! !!Buzon methodsFor: 'all' stamp: 'neta 4/22/2017 16:46'!archivarMensaje: mensaje	"comment stating purpose of message"	buzon addFirst: mensaje.! !!Buzon methodsFor: 'all' stamp: 'neta 4/24/2017 12:25'!cantidadMensajesDe: persona	"comment stating purpose of message"	|cantidadMensajesPersona|	cantidadMensajesPersona := 0.	buzon do: [:mi_mensaje | (mi_mensaje verEmisor = persona )ifTrue:[cantidadMensajesPersona := 	cantidadMensajesPersona +1]].	^ cantidadMensajesPersona.	! !!Buzon methodsFor: 'all' stamp: 'neta 4/24/2017 12:25'!cantidadMensajesEnviadosA: persona	|cantidadMensajesPersona|	cantidadMensajesPersona := 0.	buzon do: [:mi_mensaje | (mi_mensaje verReceptor = persona )ifTrue:[cantidadMensajesPersona := 	cantidadMensajesPersona +1]].	^ cantidadMensajesPersona.! !Object subclass: #ChatGrupal	instanceVariableNames: 'conversacion'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!ChatGrupal methodsFor: 'all' stamp: 'neta 4/23/2017 08:50'!initialize	"comment stating purpose of message"	conversacion := Conversacion new.! !!ChatGrupal methodsFor: 'all' stamp: 'neta 4/23/2017 08:53'!agregarMensaje: mensaje	"comment stating purpose of message"	conversacion agregarMensaje: mensaje.! !!ChatGrupal methodsFor: 'all' stamp: 'neta 4/23/2017 09:47'!obtenerConversacion	"comment stating purpose of message"	^conversacion obtenerConversacion.! !Object subclass: #Contacto	instanceVariableNames: 'nombrePersona'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Contacto methodsFor: 'all' stamp: 'neta 4/22/2017 15:59'!obtenerNombre	"comment stating purpose of message"	^ nombrePersona.! !!Contacto methodsFor: 'all' stamp: 'neta 4/22/2017 15:47'!establecerNombre: nombre	"comment stating purpose of message"	nombrePersona := nombre. ! !Object subclass: #Conversacion	instanceVariableNames: 'historial persona'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Conversacion methodsFor: 'all' stamp: 'neta 4/22/2017 19:24'!obtenerConversacion	"comment stating"	^ historial.! !!Conversacion methodsFor: 'all' stamp: 'neta 4/22/2017 19:30'!conversarCon: nombre	"comment stating purpose of message"	persona := nombre.! !!Conversacion methodsFor: 'all' stamp: 'neta 4/22/2017 20:35'!agregarMensaje: mensaje	"comment stating purpose of message"	|sentencia|	sentencia := mensaje verEmisor, ': ', mensaje verContenido.	historial add: sentencia.	! !!Conversacion methodsFor: 'all' stamp: 'neta 4/22/2017 20:34'!initialize	"comment stating purpose of message"	historial := ListaDesdeCero new.! !!Conversacion methodsFor: 'all' stamp: 'neta 4/22/2017 19:34'!conversoCon	"comment stating"	^ persona.! !Object subclass: #Grupo	instanceVariableNames: 'nombreGrupo miembros conversacion buzonEntradaGrupo buzonSalidaGrupo'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Grupo methodsFor: 'all' stamp: 'neta 4/22/2017 20:39'!agregarContacto: persona	miembros add: persona.! !!Grupo methodsFor: 'all' stamp: 'neta 4/22/2017 21:12'!cantidadMiembrosEnGrupo	^ miembros size + 1.! !!Grupo methodsFor: 'all' stamp: 'neta 4/23/2017 09:32'!verBuzonEntrada	"comment stating purpose of message"	^ buzonEntradaGrupo.! !!Grupo methodsFor: 'all' stamp: 'neta 4/23/2017 09:18'!verChat	"comment stating purpose of message"	^ conversacion.! !!Grupo methodsFor: 'all' stamp: 'neta 4/23/2017 09:31'!initialize	"comment stating purpose of message"	miembros := OrderedCollection new.	conversacion := ChatGrupal new.	buzonEntradaGrupo := Buzon new.	buzonSalidaGrupo := Buzon new.! !!Grupo methodsFor: 'all' stamp: 'neta 4/23/2017 09:32'!verBuzonSalida	"comment stating purpose of message"	^ buzonSalidaGrupo.! !!Grupo methodsFor: 'all' stamp: 'neta 4/22/2017 20:38'!asignarNombre: nombre	"comment stating purpose of message"	nombreGrupo := nombre.! !!Grupo methodsFor: 'all' stamp: 'neta 4/23/2017 19:19'!obtenerTodosMensajes	"comment stating purpose of message"	|todos_mensajes|	todos_mensajes := OrderedCollection new.	(buzonEntradaGrupo obtenerMensajes) do:[:mensajeEntrada | todos_mensajes add: mensajeEntrada].	(buzonSalidaGrupo obtenerMensajes )do:[:mensajeSalida | todos_mensajes add: mensajeSalida].	^ todos_mensajes.! !Object subclass: #ListaDesdeCero	instanceVariableNames: 'lista'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!ListaDesdeCero methodsFor: 'all' stamp: 'neta 4/22/2017 20:32'!initialize	"comment stating purpose of message"	lista := OrderedCollection new.! !!ListaDesdeCero methodsFor: 'all' stamp: 'neta 4/22/2017 20:34'!at: pos	"comment stating purpose of message"	^ lista at: (pos+1).! !!ListaDesdeCero methodsFor: 'all' stamp: 'neta 4/22/2017 20:33'!add: objeto	"comment stating purpose of message"	lista addFirst: objeto.! !Object subclass: #Mensaje	instanceVariableNames: 'emisor receptor contenido'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Mensaje methodsFor: 'all' stamp: 'neta 4/22/2017 16:06'!establecerContenido: mensaje	"comment stating purpose of message"	contenido := mensaje.! !!Mensaje methodsFor: 'all' stamp: 'neta 4/22/2017 16:05'!establecerEmisor: persona	"comment stating purpose of message"	emisor := persona.! !!Mensaje methodsFor: 'all' stamp: 'neta 4/22/2017 16:31'!verReceptor	"comment stating purpose of message"	^ receptor.! !!Mensaje methodsFor: 'all' stamp: 'neta 4/22/2017 16:22'!verEmisor	"comment stating purpose of message"	^ emisor.! !!Mensaje methodsFor: 'all' stamp: 'neta 4/22/2017 16:22'!verContenido	"comment stating purpose of message"	^ contenido.! !!Mensaje methodsFor: 'all' stamp: 'neta 4/22/2017 16:31'!establecerReceptor: persona	"comment stating purpose of message"	receptor := persona.! !